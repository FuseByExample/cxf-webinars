<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2011 FuseSource
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:cxf="http://camel.apache.org/schema/cxf"
      xmlns:jaxws="http://cxf.apache.org/jaxws"
      xmlns:soap="http://cxf.apache.org/bindings/soap"
      xmlns:cus="http://demo.fusesource.com/wsdl/CustomerService/"
      xsi:schemaLocation="
    http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
    http://camel.apache.org/schema/cxf
        http://camel.apache.org/schema/cxf/camel-cxf.xsd
    http://camel.apache.org/schema/spring
        http://camel.apache.org/schema/spring/camel-spring.xsd
">

    <!-- When you use the address="/Customer", the CXF endpoint is installed
       into the container's default Jetty container and automatically gets the URL:
       http://localhost:8181/cxf/Customer
    -->
    <!-- address="/Customer" -->
    <!-- address="http://0.0.0.0:9191/Customer" -->
    <cxf:cxfEndpoint id="customer-ws"
        address="/Customer"
        endpointName="c:SOAPOverHTTP"
        serviceName="c:CustomerService"
        wsdlURL="wsdl/CustomerService.wsdl"
        xmlns:c="http://demo.fusesource.com/wsdl/CustomerService/"/>

    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <route>
            <from uri="cxf:bean:customer-ws?dataFormat=PAYLOAD"/>
            <choice>
                <when>
                    <simple>${in.header.operationName} == 'updateCustomer'</simple>
                    <log message="Placing update customer message onto queue."/>
                    <inOnly uri="activemq:queue:CustomerUpdates?jmsMessageType=Text"/>
                    <transform>
                        <constant>
                            <![CDATA[
                              <ns2:updateCustomerResponse xmlns:ns2="http://demo.fusesource.com/wsdl/CustomerService/"/>
                            ]]>
                        </constant>
                    </transform>
                </when>
                <when>
                    <simple>${in.header.operationName} == 'lookupCustomer'</simple>
                    <convertBodyTo type="org.w3c.dom.Node"/>
                    <setHeader headerName="customerId">
                        <xpath>/cus:lookupCustomer/customerId/text()</xpath>
                    </setHeader>
                    <to uri="lookupCustomer"/>
                    <to uri="velocity:lookupCustomerResponse.vm"/>
                </when>
                <when>
                    <simple>${in.header.operationName} == 'getCustomerStatus'</simple>
                    <convertBodyTo type="org.w3c.dom.Node"/>
                    <setHeader headerName="customerId">
                        <xpath>/cus:getCustomerStatus/customerId/text()</xpath>
                    </setHeader>
                    <to uri="getCustomerStatus"/>
                    <to uri="velocity:getCustomerStatusResponse.vm"/>
                </when>
            </choice>
        </route>
    </camelContext>

    <bean id="cxfPayloadProcessor" class="com.fusesource.customerwscamelcxfpayload.CxfPayloadProcessor"/>

    <bean id="getCustomerStatus" class="com.fusesource.customerwscamelcxfpayload.GetCustomerStatus"/>

    <bean id="lookupCustomer" class="com.fusesource.customerwscamelcxfpayload.LookupCustomer"/>

    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="brokerURL" value="tcp://localhost:61616"/>
        <property name="userName" value="admin"/>
        <property name="password" value="admin"/>
    </bean>

</beans>
